import 'dart:convert';
import 'dart:io';
import 'dart:math';
import 'package:cloud_firestore/cloud_firestore.dart';
import 'package:firebase_storage/firebase_storage.dart';
import 'package:flutter/material.dart';
import 'package:path_provider/path_provider.dart';
import 'package:rowwad/Pages/NewWelcom.dart';
import 'package:rowwad/Pages/QuestionPage.dart';
import 'package:intl/intl.dart' as intl;
import 'package:image_picker/image_picker.dart';

class SplachNew extends StatefulWidget {
  SplachNew({Key key}) : super(key: key);
  //variable
File jsonFile;
Directory dir;
bool fileExists = false;
Map<String, dynamic> fileContent;
int manyTime;
String userName;
File imageFile;
bool isPhotoSelected = false;
String _url;
  @override
  _SplachNewState createState() => _SplachNewState();
}
TextEditingController _myController = TextEditingController();


class _SplachNewState extends State<SplachNew> {
  @override
  Widget build(BuildContext context) {
    return Container(
      child: Scaffold(
        body: SafeArea(
                  child: Container(
            width: double.infinity,
            decoration: BoxDecoration(
              image: DecorationImage(
                  image: AssetImage("images/allstars.jpg"), fit: BoxFit.fill),
            ),
            child: Column(
              crossAxisAlignment: CrossAxisAlignment.center,
              mainAxisAlignment: MainAxisAlignment.spaceBetween,
              children: <Widget>[
                Container(
                  
                  width: double.infinity,
                    padding: EdgeInsets.symmetric(horizontal: 10),
                    margin: EdgeInsets.symmetric(horizontal: 10),
                    decoration: BoxDecoration(
                        border: Border.all(width: 3, color: Colors.white),
                        color: Colors.purple,
                        borderRadius: BorderRadius.only(
                            topLeft: Radius.circular(20),
                            bottomRight: Radius.circular(20)),
                        gradient: LinearGradient(
                          colors: [Colors.blue, Colors.green],
                        )),
                    child: FittedBox(
                      child: Text(
                        "مسابقة رواد الاغنية المغربية الاصيلة",
                        style: TextStyle( color: Colors.white),
                      ),
                    )),
informationContainer(),

              ],
            ),
          ),
        ),
      ),
    );
  }
  Widget informationContainer() {
    return Container(
      padding: EdgeInsets.symmetric(horizontal: 15),
      child: Column(
        children: <Widget>[
          Directionality(
            textDirection: TextDirection.rtl,
            child: TextField(
              textAlign: TextAlign.right,
              controller: _myController,
              decoration: InputDecoration(
                filled: true,
                labelText: "أكتب اسمك من فضلك",
                labelStyle: TextStyle(
                
                  fontSize: 30,
                  color: Colors.black,
                ),
                hoverColor: Colors.black,
                fillColor: Colors.white,
                border: new OutlineInputBorder(
                  borderRadius: new BorderRadius.circular(25.0),
                  borderSide: new BorderSide(),
                ),
              ),
              keyboardType: TextInputType.text,
              style: new TextStyle(color: Colors.black,
                fontFamily: "Poppins",
              ),
            ),
          ),

          Row(
            
            children: <Widget>[
              Card(
                child: Text("إلتقط صورة بضغطة واحدة, او اختر صورة بضغطة مطولة")),

            ],
          )
        ],
      ),
    );
  }

  Future pickImage(bool camera) async {
    if (camera) {
      File image = await ImagePicker.pickImage(source: ImageSource.camera);
      setState(() {
        imageFile = image;
      });
    } else {
      File image = await ImagePicker.pickImage(source: ImageSource.gallery);
      setState(() {
        imageFile = image;
        isPhotoSelected=true;
      });
    }
  }

  void uploadImage(context, String photoName) async {
    try {
      FirebaseStorage firebaseStorage =
          FirebaseStorage(storageBucket: "gs://rowwad-b7c15.appspot.com");
      StorageReference storageReference =
          firebaseStorage.ref().child("$photoName.jpg");
      StorageUploadTask storageUploadTask = storageReference.putFile(imageFile);
      StorageTaskSnapshot storageTaskSnapshot =
          await storageUploadTask.onComplete;
      Scaffold.of(context).showSnackBar(SnackBar(
        content: Text("success"),
      ));
      String url = await storageTaskSnapshot.ref.getDownloadURL();
      setState(() {
        _url = url;
      });
    } catch (ex) {
      print(ex.message);
    }
    writeToFile("urlImage", "_url");
  }

  
  
       Map<String, dynamic> content, Directory dir, String fileName) {
    print("Creating file!");
    File file = new File(dir.path + "/" + fileName);
    file.createSync();
    fileExists = true;
    file.writeAsStringSync(json.encode(content));
  }

  void writeToFile(String key, dynamic value) {
    print("Writing to file!");
    Map<String, dynamic> content = {key: value};
    if (fileExists) {
      print("File exists");
      Map<String, dynamic> jsonFileContent =
          json.decode(jsonFile.readAsStringSync());
      jsonFileContent.addAll(content);
      jsonFile.writeAsStringSync(json.encode(jsonFileContent));
    } else {
      print("File does not exist!");
      createFile(content, dir, fileName);
    }
    this.setState(() => fileContent = json.decode(jsonFile.readAsStringSync()));
    print(fileContent);
  }
}
